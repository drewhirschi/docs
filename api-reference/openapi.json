{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.enzo.health"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflow_runs/{id}": {
      "get": {
        "summary": "Get Workflow Run Status",
        "description": "Retrieves the status and details of a specific workflow run.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the workflow_run to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of workflow run status.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string",
                      "enum": ["workflow_run"],
                      "description": "The type of response, always 'workflow_run'."
                    },
                    "id": {
                      "type": "string",
                      "description": "The ID of the workflow run."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PENDING",
                        "IN_PROGRESS",
                        "SUCCEEDED",
                        "FAILED",
                        "CANCELED"
                      ],
                      "description": "The current status of the workflow run."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "The metadata associated with the workflow run."
                    },
                    "initialRunAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time (in UTC) at which the workflow was started."
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time (in UTC) at which the workflow was completed. Will be null if the workflow is not completed."
                    },
                    "outputs": {
                      "type": "array",
                      "description": "An array of outputs generated by the WorkflowRun.",
                      "items": {
                        "type": "object"
                      }
                    },
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["workflow"]
                        },
                        "id": {
                          "type": "string",
                          "description": "The Workflow ID that can be fetched from the Enzo Platform."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the Workflow."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the Workflow."
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "description": "Error object, if workflow run failed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Workflow run not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/v1/workflow_runs": {
      "post": {
        "summary": "Run Workflow",
        "description": "Once a workflow has been created on the Enzo Platform, this endpoint can be used to send file(s) to be run.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["workflowId"],
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "An array of Files. Either files or rawTexts must be provided.",
                    "items": {
                      "type": "object",
                      "required": ["name", "url"],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the file."
                        },
                        "url": {
                          "type": "string",
                          "description": "A presigned URL for the file. Though we will download immediately, we recommend a 5 - 15 minute expiration time."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflowRun": {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["workflow_run"],
                          "description": "The type of response, always 'workflow_run'."
                        },
                        "id": {
                          "type": "string",
                          "description": "An ID corresponding to a specific File x Workflow combination."
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "IN_PROGRESS",
                            "SUCCEEDED",
                            "FAILED",
                            "CANCELED"
                          ],
                          "description": "The status of a WorkflowRun. Always 'PENDING' initially."
                        },
                        "initialRunAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time (in UTC) at which the workflow was started."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
